<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.yudin</groupId>
    <artifactId>PlaywrightCarServiceAutomation</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>PlaywrightCarServiceAutomation</name>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
<!--        Use 1 compiler property instead of 2  -->
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <maven-failsafe-plugin.version>3.3.1</maven-failsafe-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <allure.version>2.22.0</allure.version>
        <allure-maven.version>2.12.0</allure-maven.version>
        <assertj.version>3.21.0</assertj.version>
        <aspectj.version>1.9.7</aspectj.version>
        <logback.version>1.2.6</logback.version>
        <lombok.version>1.18.36</lombok.version>
        <playwright.version>1.36.0</playwright.version>
        <slf4j-api.version>1.7.32</slf4j-api.version>
        <testng.version>7.10.2</testng.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>31.1-jre</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
            <scope>compile</scope>
        </dependency>
<!--        Used for Allure annotations-->

        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-java-commons</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-testng</artifactId>
            <version>${allure.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>test</scope>
        </dependency>
<!--    Displays logs in readable format  (try without)  -->

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.playwright</groupId>
            <artifactId>playwright</artifactId>
            <version>${playwright.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>
<!--    Used for DB and API verification. Works as waiters. Read about functions    -->

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.17.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>
    </dependencies>

<!--    Section build runs -->
<!--    <build>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>io.qameta.allure</groupId>-->
<!--                <artifactId>allure-maven</artifactId>-->
<!--                <version>${allure-maven.version}</version>-->
<!--            </plugin>-->
<!--        </plugins>-->
<!--    </build>-->

    <profiles>
        <profile>
            <id>dev</id>
            <build>
                <plugins>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.22.2</version>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>${suiteXmlFile}</suiteXmlFile> <!-- Указан путь к файлу testng.xml -->
                            </suiteXmlFiles>
                            <systemPropertyVariables>
                                <property>
                                    <name>allure.results.directory
                                    </name> <!-- Директория, в которой Allure будет сохранять результаты -->
                                    <value>target/allure-results</value>
                                </property>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>io.qameta.allure</groupId>
                        <artifactId>allure-maven</artifactId>
                        <version>${allure-maven.version}</version>
                        <executions>
                            <execution>
                                <phase>verify</phase> <!-- Плагин будет запускаться в фазе verify -->
                                <goals>
                                    <goal>report</goal> <!-- Сгенерировать отчет и открыть его в браузере -->
                                </goals>
                                <configuration>
                                    <reportDirectory>${project.build.directory}/allure-report</reportDirectory>
                                    <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

</project>